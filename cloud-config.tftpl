#cloud-config

package_update: true
package_upgrade: true

apt:
  preserve_sources_list: false
  add_apt_repo_match: ^[\w-]+:\w
  sources:
    kubernetes.list:
      source: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
      keyid: 7EA0A9C3F273FCD8
    docker.list:
      source: "deb [arch=arm64] https://download.docker.com/linux/ubuntu jammy stable"
      keyid: B53DC80D13EDEF05

packages:
  - curl
  - apt-transport-https
  - vim
  - git
  - gnupg2
  - software-properties-common
  - ca-certificates
  - uidmap
  - jq
  - containerd.io
  - kubeadm
  - kubelet
  - kubectl

write_files:
  - path: /etc/sysctl.d/kubernetes.conf
    owner: root:root
    permission: 0600
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
  %{if node == 0 }
  - path: /etc/kubeadm-config.yaml
    owner: root:root
    permission: 0600
    content: |
      apiVersion: kubeadm.k8s.io/v1beta3
      kind: ClusterConfiguration
      controlPlaneEndpoint: "cp:6443"
      networking:
        podSubnet: 192.168.0.0/16
      ---
      apiVersion: kubeadm.k8s.io/v1beta3
      kind: InitConfiguration
      localAPIEndpoint:
        advertiseAddress: "10.0.0.10"
        bindPort: 6443
      ---
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      cgroupDriver: systemd
  %{ endif }

runcmd:
  - swapoff -a
  - sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  - modprobe overlay
  - modprobe br_netfilter
  - sysctl --system
  - apt-mark hold kubelet kubeadm kubectl
  - node_ip=$(ip -o -4 addr list enp0s3 | awk '{print $4}' | cut -d/ -f1)
  - echo KUBELET_EXTRA_ARGS="--node-ip $node_ip" | tee /etc/default/kubelet
  - iptables -I INPUT 6 -m state --state NEW -p tcp --dport 2379 -j ACCEPT
  - iptables -I INPUT 6 -m state --state NEW -p tcp --dport 2380 -j ACCEPT
  - iptables -I INPUT 6 -m state --state NEW -p tcp --dport 6443 -j ACCEPT
  - iptables -I INPUT 6 -m state --state NEW -p tcp --dport 10250 -j ACCEPT
  - iptables -I INPUT 6 -m state --state NEW -p tcp --dport 10257 -j ACCEPT
  - iptables -I INPUT 6 -m state --state NEW -p tcp --dport 10259 -j ACCEPT
  - netfilter-persistent save
  - containerd config default > /etc/containerd/config.toml
  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
  - systemctl restart containerd
  %{if node == 0 }
  - curl https://docs.projectcalico.org/manifests/calico.yaml -O
  - echo "10.0.0.10 cp" >> /etc/hosts
  - echo "10.0.0.11 worker1" >> /etc/hosts
  - echo "10.0.0.12 worker2" >> /etc/hosts
  - echo "10.0.0.13 worker3" >> /etc/hosts
  - kubeadm init --config=/etc/kubeadm-config.yaml --upload-certs --ignore-preflight-errors=NumCPU | tee kubeadm-init.out
  - mkdir -p /root/.kube
  - cp -i /etc/kubernetes/admin.conf /root/.kube/config
  - chown $(id -u):$(id -g) /root/.kube/config
  - kubectl apply -f calico.yaml
  - mkdir -p /home/ubuntu/.kube
  - cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
  - chown $(id -u ubuntu):$(id -g ubuntu) /home/ubuntu/.kube/config
  - kubeadm token create ${token}
  %{ else }
  - echo "10.0.0.10 cp" >> /etc/hosts
  - kubeadm join --token ${token} --discovery-token-unsafe-skip-ca-verification cp:6443
  %{ endif }
